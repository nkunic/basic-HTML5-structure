// Flex

@import '01-helpers/variables.scss';
@import '01-helpers/mixins.scss';

.flex-center {
  align-items: center;
  display: flex;
  justify-content: center;
}

// Overflow property
.o-hidden {
  overflow: hidden !important;
}

// Z-index
.z-0 {
  z-index: 0;
}

.z-1 {
  z-index: 1;
}

// IMAGEs
.img-responsive {
  display: block;
  max-width: 100%;
  height: auto;
}

// TEXT COLORS
.text-primary {
  color: $primary-color;
}

// ALIGNMENT
.text-left {
  text-align: left;
}
.text-center {
  text-align: center;
}
.text-right {
  text-align: right;
}
.center-block {
  display: block;
  margin-left: auto;
  margin-right: auto;
}

// FLOATs
.pull-left {
  float: left;
}
.pull-right {
  float: right;
}

/* NO GUTTER */
.no-gutter {
  &.grid {
    padding: 0px;
    .row {
      padding: 0px;
      .col {
        padding: 0px;
      }
    }
  }
}

// Font smoothing
// Apply to single elements instead of globally to body.
// Only applies to webkit desktop, and FF 25 + on Mac.

.antialiased {
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

// Truncate text
.truncated {
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

// Hide from both screenreaders and browsers
.hidden {
  display: none !important;
  visibility: hidden;
}

// Hide only visually, but have it available for screenreaders
.visually-hidden {
  border: 0 none;
  clip: rect(0px, 0px, 0px, 0px);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
  width: 1px;
}

// Extends .visually-hidden to allow keyboard focus
.visually-hidden.focusable:active,
.visually-hidden.focusable:focus {
  clip: auto;
  height: auto;
  margin: 0;
  overflow: visible;
  position: static;
  width: auto;
}

// Undo visually-hidden
.visually-hidden-undo {
  position: inherit;
  overflow: visible;
  height: auto;
  width: auto;
  margin: auto;
}

// Hide visually and from screenreaders, but maintain layout
.invisible {
  visibility: hidden;
}

// Clearfix for modern browsers
.clearfix {
  &:before,
  &:after {
    content: ' ';
    display: table;
  }
  &:after {
    clear: both;
  }
}

// Disabled
.disabled {
  opacity: 0.48;
  pointer-events: none;
  cursor: not-allowed;
}

// Debugged
// For debugging purposes only
.debugged {
  background: red !important;
}

.contain {
  @include media(xlarge-up) {
    margin-left: 10%;
    margin-right: 10%;
  }
}

.contain-full {
  @include media(xlarge-up) {
    margin-left: 10%;
    margin-right: 10%;
    width: 80%;
  }
}

/* BACKGROUND */
.bg-primary {
  background: $primary-color;
  background: -webkit-linear-gradient(
    $primary-color,
    darken($primary-color, 5%)
  );
  background: linear-gradient($primary-color, darken($primary-color, 5%));
}

/*background: url('../img/bg-pattern.png'), $secondary-color;*/
/*background: url('../img/bg-pattern.png'), -webkit-linear-gradient(to left, $secondary-color, $tertiary-color);*/
/*background: url('../img/bg-pattern.png'), linear-gradient(to left, $secondary-color, $tertiary-color);*/
